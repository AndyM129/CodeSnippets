<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>amk_cs_pragma_mark_for_jxpager_view_controller</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#import &lt;JXPagingView/JXPagerListRefreshView.h&gt;
#import "JXPagerListViewController.h"

@interface BBTInnerLinkPickerPagerViewController ()&lt;JXPagerViewDelegate, JXPagerMainTableViewGestureDelegate, JXCategoryViewDelegate&gt;
@property(nonatomic, strong, nullable, readwrite) JXPagerView *pagerView;
@property(nonatomic, strong, nullable, readwrite) UIView *pagerHeaderView;
@property(nonatomic, strong, nullable, readwrite) JXCategoryTitleView *categoryTitleView;
@property(nonatomic, strong, nullable, readwrite) NSArray&lt;UIViewController&lt;JXPagerViewListViewDelegate&gt; *&gt; *listViewControllers;
@property(nonatomic, strong, nullable, readonly) UIViewController&lt;JXPagerViewListViewDelegate&gt; *currentCategoryViewController;
@end

@implementation BBTInnerLinkPickerPagerViewController

#pragma mark - Dealloc

- (void)dealloc {
    
}

#pragma mark - Init Methods

- (instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {
        self.title = @"发布过的内容";
    }
    return self;
}

#pragma mark - Life Circle

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = self.view.backgroundColor?:[UIColor whiteColor];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
}

- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
}

#pragma mark - Properties

- (JXPagerView *)pagerView {
    if (!_pagerView) {
        _pagerView = [JXPagerListRefreshView.alloc initWithDelegate:self];
        _pagerView.backgroundColor = [UIColor clearColor];
        _pagerView.mainTableView.backgroundColor = [UIColor clearColor];
        _pagerView.listContainerView.collectionView.backgroundColor = [UIColor clearColor];
        _pagerView.mainTableView.gestureDelegate = self;
        [self.view addSubview:_pagerView];
    }
    return _pagerView;
}

- (UIView *)pagerHeaderView {
    return [UIView new];
}

- (JXCategoryTitleView *)categoryTitleView {
    if (!_categoryTitleView) {
        _categoryTitleView = [[JXCategoryTitleView alloc] initWithFrame:CGRectMake(0, 0, CGRectGetWidth(self.view.frame), 40)];
        _categoryTitleView.titleFont = [UIFont fontWithName:@"PingFangSC-Medium" size: 14];
        _categoryTitleView.titleColor = [UIColor colorWithRed:17/255.0 green:17/255.0 blue:17/255.0 alpha:1.0];
        _categoryTitleView.titleSelectedFont = _categoryTitleView.titleFont;
        _categoryTitleView.titleSelectedColor = _categoryTitleView.titleColor;
        _categoryTitleView.collectionView.backgroundColor = [UIColor whiteColor];
        //_categoryTitleView.backgroundColor = self.headerView.backgroundColor;
        _categoryTitleView.delegate = self;
        _categoryTitleView.titleColorGradientEnabled = YES;
        _categoryTitleView.separatorLineShowEnabled = NO;
        _categoryTitleView.separatorLineColor = nil;
        _categoryTitleView.separatorLineSize = CGSizeZero;
        _categoryTitleView.contentScrollView = self.pagerView.listContainerView.collectionView;
        [self updateCategoryTitleViewTitles];
        
        JXCategoryIndicatorLineView *lineView = [[JXCategoryIndicatorLineView alloc] init];
        lineView.indicatorColor = [UIColor colorWithRed:255/255.0 green:221/255.0 blue:0/255.0 alpha:1.0];
        lineView.verticalMargin = 0;
        lineView.indicatorWidth = 29;
        lineView.indicatorHeight = 6;
        _categoryTitleView.indicators = @[lineView];
        
        UIView *bottomSeparator = [UIView.alloc init];
        bottomSeparator.backgroundColor = [UIColor colorWithRed:238/255.0 green:238/255.0 blue:238/255.0 alpha:1.0];
        [_categoryTitleView addSubview:bottomSeparator];
        [bottomSeparator mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.bottom.right.mas_equalTo(_categoryTitleView);
            make.height.mas_equalTo(1 / UIScreen.mainScreen.scale);
        }];
    }
    return _categoryTitleView;
}

- (NSArray&lt;UIViewController&lt;JXPagerViewListViewDelegate&gt; *&gt; *)listViewControllers {
    if (!_listViewControllers) {
        NSMutableArray&lt;UIViewController&lt;JXPagerViewListViewDelegate&gt; *&gt; *listViewControllers = @[].mutableCopy;
        [listViewControllers addObject:({
            UIViewController *viewController = [JXPagerListViewController.alloc init];
            viewController.title = @"标题1";
            [self addChildViewController:viewController];
            viewController;
        })];
        [listViewControllers addObject:({
            UIViewController *viewController = [JXPagerListViewController.alloc init];
            viewController.title = @"标题2";
            [self addChildViewController:viewController];
            viewController;
        })];
        _listViewControllers = listViewControllers;
    }
    return _listViewControllers;
}

-(UIViewController&lt;JXPagerViewListViewDelegate&gt; *)currentCategoryViewController {
    UIViewController&lt;JXPagerViewListViewDelegate&gt; *viewController = self.categoryTitleView.selectedIndex&lt;self.listViewControllers.count
    ? self.listViewControllers[self.categoryTitleView.selectedIndex] : nil;
    return viewController;
}

#pragma mark - Data &amp; Networking

#pragma mark - Layout Subviews

- (void)updateCategoryTitleViewTitles {
    self.categoryTitleView.titles = ({
        __block NSMutableArray *titles = @[].mutableCopy;
        [self.listViewControllers enumerateObjectsUsingBlock:^(UIViewController * _Nonnull viewController, NSUInteger idx, BOOL * _Nonnull stop) {
            [titles addObject:viewController.title?:@""];
        }];
        titles;
    });
}

#pragma mark - Public Methods

#pragma mark - Private Methods

#pragma mark - Notifications

#pragma mark - KVO

#pragma mark - Delegate

#pragma mark JXPagerViewDelegate

- (UIView *)tableHeaderViewInPagerView:(JXPagerView *)pagerView {
    return self.pagerHeaderView;
}

- (NSUInteger)tableHeaderViewHeightInPagerView:(JXPagerView *)pagerView {
    return self.pagerHeaderView.bounds.size.height;
}

- (NSUInteger)heightForPinSectionHeaderInPagerView:(JXPagerView *)pagerView {
    return self.categoryTitleView.bounds.size.height;
}

- (UIView *)viewForPinSectionHeaderInPagerView:(JXPagerView *)pagerView {
    return self.categoryTitleView;
}

- (NSInteger)numberOfListsInPagerView:(JXPagerView *)pagerView {
    return self.categoryTitleView.titles.count;
}

- (id&lt;JXPagerViewListViewDelegate&gt;)pagerView:(JXPagerView *)pagerView initListAtIndex:(NSInteger)index {
    return index&lt;self.listViewControllers.count ? self.listViewControllers[index] : nil;
}

- (void)mainTableViewDidScroll:(UIScrollView *)scrollView {

}

#pragma mark JXCategoryViewDelegate

- (void)categoryView:(JXCategoryBaseView *)categoryView didSelectedItemAtIndex:(NSInteger)index {
    self.navigationController.interactivePopGestureRecognizer.enabled = (index == 0);
}

- (void)categoryView:(JXCategoryBaseView *)categoryView didClickedItemContentScrollViewTransitionToIndex:(NSInteger)index {
    NSIndexPath *indexPath = [NSIndexPath indexPathForItem:index inSection:0];
    NSInteger numberOfItems = [self.pagerView.listContainerView.collectionView numberOfItemsInSection:indexPath.section];
    NSAssert(indexPath.item &lt; numberOfItems, @"参数异常\n\nindex:%ld 超出上限:%ld", index, numberOfItems);
    [self.pagerView.listContainerView.collectionView scrollToItemAtIndexPath:indexPath atScrollPosition:UICollectionViewScrollPositionCenteredHorizontally animated:NO];
}

#pragma mark JXPagerMainTableViewGestureDelegate

- (BOOL)mainTableViewGestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
    if (otherGestureRecognizer == self.categoryTitleView.collectionView.panGestureRecognizer) return NO; //禁止categoryView左右滑动的时候，上下和左右都可以滚动
    return [gestureRecognizer isKindOfClass:[UIPanGestureRecognizer class]] &amp;&amp; [otherGestureRecognizer isKindOfClass:[UIPanGestureRecognizer class]];
}

#pragma mark - Override

- (void)viewWillLayoutSubviews {
    [super viewWillLayoutSubviews];
    self.pagerView.frame = self.view.bounds;
}

#pragma mark - Helper Methods

</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>EFE2D186-62B7-4245-BA3F-6E09EEA53E76</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>JXPagerViewController: 代码框架</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
